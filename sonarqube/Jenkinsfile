pipeline {
    agent any
    environment {
        gitcommit = "${gitcommit}"
    }
    tools {
        maven 'mavenjenkins'
    }

    stages {

        stage('VerificaciÃ³n SCM') {
          steps {
            script {
              checkout scm
              sh "git rev-parse --short HEAD > .git/commit-id"
              gitcommit = readFile('.git/commit-id').trim()
            }
          }
        }
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Docker Build & Push') {
          steps {
            script {
              docker.withRegistry('https://registry.hub.docker.com', 'docker-hub') {
                  def appmavenjenkins = docker.build("hhvelascoa/mavenjenkinsempleados:${gitcommit}", ".")
                appmavenjenkins.push()
              }
            }
          }
        }
        stage('SonarQube analysis') {
            withSonarQubeEnv(credentialsId: 'squ_2f6a36a41992ed633af4bbc99cb090be27696308', installationName: 'http://192.168.1.2:9000') { // You can override the credential to be used
              sh 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.7.0.1746:sonar'
            }
        }
    }
}